# -*- coding: utf-8 -*-

"""
    credofasterpartnerapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import credofasterpartnerapi.models.initiator
import credofasterpartnerapi.models.single_airtime_parameter

class PartnerAirtimeRequest(object):

    """Implementation of the 'PartnerAirtimeRequest' model.

    TODO: type model description here.

    Attributes:
        initiator (Initiator): TODO: type description here.
        parameters (list of SingleAirtimeParameter): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "initiator":'initiator',
        "parameters":'parameters'
    }

    def __init__(self,
                 initiator=None,
                 parameters=None):
        """Constructor for the PartnerAirtimeRequest class"""

        # Initialize members of the class
        self.initiator = initiator
        self.parameters = parameters


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        initiator = credofasterpartnerapi.models.initiator.Initiator.from_dictionary(dictionary.get('initiator')) if dictionary.get('initiator') else None
        parameters = None
        if dictionary.get('parameters') != None:
            parameters = list()
            for structure in dictionary.get('parameters'):
                parameters.append(credofasterpartnerapi.models.single_airtime_parameter.SingleAirtimeParameter.from_dictionary(structure))

        # Return an object of this model
        return cls(initiator,
                   parameters)


