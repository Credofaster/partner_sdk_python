# -*- coding: utf-8 -*-

"""
    credofasterpartnerapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import credofasterpartnerapi.models.denomination

class SingleAirtimeParameter(object):

    """Implementation of the 'SingleAirtimeParameter' model.

    TODO: type model description here.

    Attributes:
        reference_id (uuid|string): A UUID for Each
        country (string): Which Country are you requesting in
        account_no (string): The Receipient's Account. Can be Phone
            Number(International Format)
        denomination (Denomination): Currency Declarative Type
        other (object): Any Other Tags to accompany the Request

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reference_id":'reference_id',
        "country":'country',
        "account_no":'account_no',
        "denomination":'denomination',
        "other":'other'
    }

    def __init__(self,
                 reference_id=None,
                 country='KE',
                 account_no='254705126329',
                 denomination=None,
                 other=None):
        """Constructor for the SingleAirtimeParameter class"""

        # Initialize members of the class
        self.reference_id = reference_id
        self.country = country
        self.account_no = account_no
        self.denomination = denomination
        self.other = other


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        reference_id = dictionary.get('reference_id')
        country = dictionary.get("country") if dictionary.get("country") else 'KE'
        account_no = dictionary.get("account_no") if dictionary.get("account_no") else '254705126329'
        denomination = credofasterpartnerapi.models.denomination.Denomination.from_dictionary(dictionary.get('denomination')) if dictionary.get('denomination') else None
        other = dictionary.get('other')

        # Return an object of this model
        return cls(reference_id,
                   country,
                   account_no,
                   denomination,
                   other)


